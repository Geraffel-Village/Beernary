# code: language=ansible
---

### InfluxDB

- name: Add influxdata gpg key
  ansible.builtin.apt_key:
    url: https://repos.influxdata.com/influxdata-archive_compat.key
    state: present

- name: Add influxdata repo
  ansible.builtin.apt_repository:
    repo: deb https://repos.influxdata.com/debian stable main
    state: present
    filename: influxdb
    update_cache: true
  register: influx_repo_setup

- name: Install influxdb
  ansible.builtin.package:
    name: influxdb
    state: present
  notify: restart influxdb

- name: "Install python dependencies for Ansible"
  become: true
  ansible.builtin.apt:
    update_cache: true
    name: python3-influxdb
    state: present

- name: Copy influxdb config file influxdb.conf
  ansible.builtin.template:
    src: templates/influxdb/influxdb.conf.j2
    dest: /etc/influxdb/influxdb.conf
    owner: root
    group: root
    mode: 0644
  notify: restart influxdb

- name: Start influxdb for bootstrapping
  ansible.builtin.service:
    name: influxdb
    state: started

- name: Create database using custom credentials
  community.general.influxdb_database:
    hostname: "{{ beernary_influxdb_http_host }}"
    port:     "{{ beernary_influxdb_http_port }}"
    username: "{{ beernary_influxdb_username }}"
    password: "{{ beernary_influxdb_password }}"
    database_name: "{{ beernary_influxdb_database }}"

- name: Enable influxdb service
  ansible.builtin.systemd:
    name: influxdb
    enabled: true
    masked: no

### Grafana

- name: Add grafana gpg key
  ansible.builtin.apt_key:
    url: https://packages.grafana.com/gpg.key
    state: present

- name: Add grafana repo
  ansible.builtin.apt_repository:
    repo: deb https://packages.grafana.com/oss/deb stable main
    state: present
    filename: grafana
    update_cache: true
  register: grafana_repo_setup

- name: Install grafana
  ansible.builtin.package:
    name: grafana
    state: present
  register: grafana_install
  notify: restart grafana

- name: Copy grafana config
  ansible.builtin.template:
    src: templates/grafana/grafana.ini.j2
    dest: /etc/grafana/grafana.ini
    owner: root
    group: grafana
    mode: 0640
  notify: restart grafana

- name: Check Grafana binary capabilities
  ansible.builtin.command:
    cmd: getcap /usr/share/grafana/bin/grafana
  register: grafana_cap
  ignore_errors: true
  changed_when: false

- name: Set Grafana capability for low port binding
  ansible.builtin.command:
    cmd: setcap 'cap_net_bind_service=+ep' /usr/share/grafana/bin/grafana
  become: true
  when: "'cap_net_bind_service=ep' not in grafana_cap.stdout"

- name: Create systemd override directory for Grafana
  become: true
  file:
    path: /etc/systemd/system/grafana-server.service.d
    state: directory
    mode: "0755"

- name: Permit CAP_NET_BIND_SERVICE in systemd unit
  become: true
  copy:
    dest: /etc/systemd/system/grafana-server.service.d/override.conf
    mode: "0644"
    content: |
      [Service]
      AmbientCapabilities=CAP_NET_BIND_SERVICE
      CapabilityBoundingSet=CAP_NET_BIND_SERVICE
      NoNewPrivileges=false

- name: Reload systemd and restart Grafana
  become: true
  systemd:
    name: grafana-server
    state: restarted
    daemon_reload: true

- name: Enable grafana service
  ansible.builtin.systemd:
    name: grafana-server
    enabled: true
    masked: no

- name: Set initial grafana admin password
  ansible.builtin.command: "/usr/sbin/grafana-cli admin reset-admin-password {{ beernary_grafana_admin_password }}"
  become: yes
  become_user: grafana
  when: grafana_install.changed|bool
 
- name: Start grafana-server for bootstrapping
  ansible.builtin.systemd:
    name: grafana-server
    state: started

- name: Create grafana datasource for influxdb
  community.grafana.grafana_datasource:
    name: "datasource-influxdb"
    grafana_url: "http://127.0.0.1:3000"
    grafana_user: "admin"
    grafana_password: "{{ beernary_grafana_admin_password }}"
    ds_type: "influxdb"
    ds_url: "http://127.0.0.1:8086"
    uid: "f162eb3b-1ca8-4e79-a5f0-e31d6a4dfd43"
    database: "{{ beernary_influxdb_database }}"
    user: "{{ beernary_influxdb_username }}"
    password: "{{ beernary_influxdb_password }}"

- name: Create target directory for grafana dashboards
  ansible.builtin.file:
    path: /opt/beernary-dashboards
    owner: root
    group: root
    mode: 0770
    state: directory

- name: Copy Beernary public grafana dashboard
  ansible.builtin.copy:
    src: grafana/dashboards/beernary_public_dashboard.json
    dest: /opt/beernary-dashboards/
    mode: 0644
    owner: root
    group: root

- name: Import Beernary public grafana dashboard
  community.grafana.grafana_dashboard:
    grafana_url: "http://127.0.0.1:3000"
    grafana_user: "admin"
    grafana_password: "{{ beernary_grafana_admin_password }}"
    path: /opt/beernary-dashboards/beernary_public_dashboard.json
    commit_message: Updated by ansible
    overwrite: yes