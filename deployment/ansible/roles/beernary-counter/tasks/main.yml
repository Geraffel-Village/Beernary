# code: language=ansible
---


- name: "Install operating system dependencies" # noqa package-latest
  ansible.builtin.apt:
    name:
      - "python3-virtualenv"
    state: "latest"

- name: "Ensure Beernary application user exists"
  ansible.builtin.user:
    name: "{{ beernary_counter_application_user }}"
    home: "/home/{{ beernary_counter_application_user }}"
    groups:
      - "gpio"
      - "dialout"
    shell: "/bin/bash"
    state: "present"

# This will copy the registry too, but it will be left unused.
- name: "Copy Beernary application source to Raspberry"
  ansible.posix.synchronize:
    src: "{{ beernary_counter_source_path }}"
    dest: "{{ beernary_counter_destination_path }}"
    perms: true
    rsync_opts:
      - "--exclude=.venv"

  notify:
    - "Restart beernary-counter"
  tags: update_app

- name: "Install application Python dependencies"
  ansible.builtin.pip:
    requirements: "{{ beernary_counter_destination_path }}requirements.txt"
    virtualenv: "{{ beernary_counter_destination_path }}.venv"

- name: "Set file permissions for application directory"
  ansible.builtin.file:
    path: "{{ beernary_counter_destination_path }}"
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_group }}"
    mode: "u=rwX,g=rX,o=rX"
    recurse: true
  notify:
    - "Restart beernary-counter"
  tags: update_app

- name: "Add execute permission to cli file"
  ansible.builtin.file:
    path: "{{ beernary_counter_destination_path }}beernary_cli.py"
    mode: "0744"
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_group }}"
  tags: update_app

- name: "Create symlink for beernary-cli"
  ansible.builtin.file:
    src: "{{ beernary_counter_destination_path }}beernary_cli.py"
    dest: "/usr/local/bin/beernary-cli"
    state: link
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_group }}"
  tags: update_app

- name: "Create application log directory"
  ansible.builtin.file:
    path: "{{ beernary_counter_destination_path }}log"
    state: directory
    mode: "0755"
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_group }}"

- name: "Ensure Beernary application group exists"
  ansible.builtin.group:
    name: "{{ beernary_counter_application_user }}"
    state: "present"

- name: "Deploy systemd unit for beernary-counter"
  ansible.builtin.template:
    src: "beernary-counter.service.j2"
    dest: "/etc/systemd/system/beernary-counter.service"
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_user }}"
    mode: "0744"
  notify:
    - "Reload systemd"
    - "Enable beernary-counter"
    - "Restart beernary-counter"

- name: "Create configuration directory for beernary-counter"
  ansible.builtin.file:
    path: "{{ beernary_counter_configuration_path }}"
    state: "directory"
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_user }}"
    mode: "0744"

- name: "Deploy configuration file for beernary-counter"
  ansible.builtin.template:
    src: "config.ini.j2"
    dest: "{{ beernary_counter_configuration_path }}/config.ini"
    owner: "{{ beernary_counter_application_user }}"
    group: "{{ beernary_counter_application_user }}"
    mode: "0644"
  notify:
    - "Restart beernary-counter"
  tags: update_app

# Final health check for beernary after deployment

- name: "Trigger handlers before executing final check"
  ansible.builtin.meta: flush_handlers

- name: "Retrieve service state information from ansible"
  ansible.builtin.service_facts:

- name: "Let ansible fail if beernary is not running"
  ansible.builtin.fail:
    msg: "beernary-counter application not running!"
  when: ansible_facts.services['beernary-counter.service']['state'] != 'running'
